
==================== FINAL INTERFACE ====================
2016-11-09 22:05:22.35912 UTC

interface main@main:Main 8001
  interface hash: 3ed76c2cea6d790f261b2585be4b0c7d
  ABI hash: 7fa2e40885ec341ec9d5561fccaf43b7
  export-list hash: c855ba0fe7c364e08a74e306d9f3ff55
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 45aebc7f20771f348c9cf93c597a41e6
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0*
                      connect4-0.1.0.1@connect4-0.1.0.1-WKoGruS9yd1l9XgtChq8q
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI:System.Console.ANSI 1565f362ecfef470e206e8f337ab1f4d
import  -/  ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI:System.Console.ANSI.Common 24b0e5493e83ac3d41ce56ed4609c6c7
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Data.Char eb33dc25ecb52d018a0ca26590e2b50b
import  -/  base-4.9.0.0:Data.List 49b86831b79b49ce5d4d9416ecba61df
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.IO.Handle a1938753d58593f0a419f85b67aa7cd3
import  -/  base-4.9.0.0:GHC.IO.Handle.FD adf0145182d1c6eb38b2b8ce5a292e84
import  -/  base-4.9.0.0:GHC.IO.Handle.Types a94506fe2fe805a97a84bccd65c71eb8
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  base-4.9.0.0:System.Exit 4df7be78e54bbe200276120bd44e7e2a
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  base-4.9.0.0:Text.Read 9c1be14f7e5eac8b18bcb566c5763677
import  -/  connect4-0.1.0.1@connect4-0.1.0.1-WKoGruS9yd1l9XgtChq8q:Lib 362c38c6f57b5c0d56229137f46565ed
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
ded18122be286ac33633e889b72caf37
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
05ba6d373b6a6d5e0985729a12fde8c9
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.hSetBuffering1
                        GHC.IO.Handle.FD.stdout
                        GHC.IO.Handle.Types.NoBuffering
                        s of ds1 { (#,#) ipv ipv1 ->
                 case System.Environment.getArgs1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 Lib.playWith1
                   (case ipv3 of wild {
                      []
                      -> case GHC.List.badHead
                         ret_ty [(GHC.Types.Char, System.Console.ANSI.Common.Color)]
                         of {}
                      : x ds3
                      -> GHC.List.zip
                           @ GHC.Types.Char
                           @ System.Console.ANSI.Common.Color
                           (Data.OldList.nubBy @ GHC.Types.Char GHC.Classes.eqChar x)
                           Main.main5 })
                   (case Text.Read.readEither6
                           @ GHC.Types.Int
                           (Text.ParserCombinators.ReadP.run
                              @ GHC.Types.Int
                              Main.main4
                              (GHC.List.$w!! @ GHC.Base.String ipv3 2#)) of wild {
                      []
                      -> case GHC.Err.error
                                @ 'GHC.Types.PtrRepLifted
                                @ GHC.Types.Int
                                GHC.Err.errorWithoutStackTrace_wild1
                                  `cast`
                                (Sym (GHC.Classes.N:IP[0]
                                          <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                Text.Read.readEither4
                         ret_ty [GHC.Base.String]
                         of {}
                      : x ds
                      -> case ds of wild1 {
                           []
                           -> case x of ww { GHC.Types.I# ww1 ->
                              Lib.$wmakeGrid
                                (case Text.Read.readEither6
                                        @ GHC.Types.Int
                                        (Text.ParserCombinators.ReadP.run
                                           @ GHC.Types.Int
                                           Main.main4
                                           (GHC.List.$w!! @ GHC.Base.String ipv3 1#)) of wild2 {
                                   []
                                   -> GHC.Err.error
                                        @ 'GHC.Types.PtrRepLifted
                                        @ GHC.Types.Int
                                        GHC.Err.errorWithoutStackTrace_wild1
                                          `cast`
                                        (Sym (GHC.Classes.N:IP[0]
                                                  <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                        Text.Read.readEither4
                                   : x1 ds3
                                   -> case ds3 of wild3 {
                                        [] -> x1
                                        : ipv4 ipv5
                                        -> GHC.Err.error
                                             @ 'GHC.Types.PtrRepLifted
                                             @ GHC.Types.Int
                                             GHC.Err.errorWithoutStackTrace_wild1
                                               `cast`
                                             (Sym (GHC.Classes.N:IP[0]
                                                       <"callStack">_N
                                                       <GHC.Stack.Types.CallStack>_N))
                                             Text.Read.readEither2 } })
                                ww1 }
                           : ipv4 ipv5
                           -> case GHC.Err.error
                                     @ 'GHC.Types.PtrRepLifted
                                     @ GHC.Types.Int
                                     GHC.Err.errorWithoutStackTrace_wild1
                                       `cast`
                                     (Sym (GHC.Classes.N:IP[0]
                                               <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                     Text.Read.readEither2
                              ret_ty [GHC.Base.String]
                              of {} } })
                   (case Text.Read.readEither6
                           @ GHC.Types.Int
                           (Text.ParserCombinators.ReadP.run
                              @ GHC.Types.Int
                              Main.main4
                              (GHC.List.$w!! @ GHC.Base.String ipv3 3#)) of wild {
                      [] -> Main.main3
                      : x ds -> case ds of wild1 { [] -> x : ipv4 ipv5 -> Main.main2 } })
                   ipv2 } }) -}
fdf1d9f7181c0a250f63aaa797ebdde0
  main10 :: [System.Console.ANSI.Common.Color]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ System.Console.ANSI.Common.Color
                   System.Console.ANSI.Common.Red
                   (GHC.Types.[] @ System.Console.ANSI.Common.Color)) -}
e944c61160c30eccba003ff0e79da497
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
1cab924d0cd565ecdcefb6c3f4561344
  main2 :: GHC.Types.Int
  {- Strictness: x -}
649af1f590f20baad89400f56adf6243
  main3 :: GHC.Types.Int
  {- Strictness: x -}
ecd834adb720f8884f6a89477e285906
  main4 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: ((GHC.Read.$fReadInt3
                    GHC.Read.$fReadInt_$sconvertInt
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <GHC.Types.Int>_R)
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
86a1c0a6583efab0e766c9f513f21139
  main5 :: [System.Console.ANSI.Common.Color]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ System.Console.ANSI.Common.Color
                   System.Console.ANSI.Common.Yellow
                   Main.main6) -}
859cacb6c2f49f5a652e2b9990b95d6d
  main6 :: [System.Console.ANSI.Common.Color]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ System.Console.ANSI.Common.Color
                   System.Console.ANSI.Common.Cyan
                   Main.main7) -}
3a9b369237ab75debe73e401f418f589
  main7 :: [System.Console.ANSI.Common.Color]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ System.Console.ANSI.Common.Color
                   System.Console.ANSI.Common.Blue
                   Main.main8) -}
3b43f5a15bb4870c56d2b5e1c74a614b
  main8 :: [System.Console.ANSI.Common.Color]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ System.Console.ANSI.Common.Color
                   System.Console.ANSI.Common.Green
                   Main.main9) -}
c06849336fde3637fa05c2e35ec1ae8b
  main9 :: [System.Console.ANSI.Common.Color]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ System.Console.ANSI.Common.Color
                   System.Console.ANSI.Common.Magenta
                   Main.main10) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

